<!-- <!DOCTYPE html>
<html>
  <body> -->
    <h2>Measure Performance</h2>
    <div class="row">
      <form role="form" id="perfForm">
        <div class="col-md-5 column">
          <div class="form-group input-group has-warning col-md-7 ">
            <span class="input-group-addon"><i class="fa fa-exchange fa-fw"></i>Max Requests</span>
            <input id= "mreq" type="text" name="maxreq" class="form-control input-md" placeholder="Max number of Requests" pattern="^[1-9][0-9]{1,3}$"   required title="Should be less than 1000" autofocus>
          </div>
          <div class="form-group input-group has-warning col-md-7 ">
            <span class="input-group-addon"><i class="fa fa-clock-o fa-fw"></i>Test Duration</span>
            <input id = "dur" type="text" name="duration" class="form-control input-md" placeholder="Duration in seconds" pattern="^[1-9][0-9]{0,2}$"   required title="should be between 1-4 digits" >
          </div>
          
          
          <button type="submit" id="startBtn" class="btn btn-success" style="margin-top:5px">Test</button>
          <button type="submit" id="stopBtn" class="btn btn-danger" style="margin-top:5px">Stop</button>
        </div>
      </form>
      <div id="progressDiv" class="col-md-6 column form-group">
        <h4>Progress</h4>
        <div class="" id="test_progess">
          <div class="has-success col-xs-6 col-md-3 form-group input-group input-group-sm">
            <span class="input-group-addon"><i class="fa fa-arrow-left fa-fw"></i>POST</span>
            <input id= "postc" type="text" name="postPS" class="form-control input-md" readonly>
          </div>
          <div id="post-progress" class="progress progress-striped active">
            <div class="progress-bar progress-bar-success" style="width: 0%">
              <!-- <div class="active progress-bar progress-bar-warning progress-bar-striped" role="progressbar"  aria-valuemin="0" aria-valuemax="100" style="width: 100%"> -->
              <!-- <span class="sr-only">40% Complete (success)</span> -->
            </div>
            <div class="progress-bar progress-bar-danger" style="width: 100%"></div>
            
          </div>
          
          
          <div class="has-warning col-xs-6 col-md-3 form-group input-group input-group-sm">
            <span class="input-group-addon"><i class="fa fa-arrow-right fa-fw"></i>GET</span>
            <input id = "getc" type="text" name="duration" class="form-control input-md" readonly >
          </div>
          <div id="get-progress" class="progress progress-striped active">
            <div class="progress-bar progress-bar-warning" style="width: 0%">
              <!-- <div class="active progress-bar progress-bar-warning progress-bar-striped" role="progressbar"  aria-valuemin="0" aria-valuemax="100" style="width: 100%"> -->
              <!-- <span class="sr-only">40% Complete (success)</span> -->
            </div>
            <div class="progress-bar progress-bar-danger" style="width: 100%"></div>
            
          </div>
        </div>
      </div>
    </div>
    <script type="text/javascript">
    $('#progressDiv').hide();
    var timeFunc = '';
    var postCounter = 0;
    var getCounter = 0;
    var totalPostCounter = 0;
    var totalGetCounter = 0;
    var maxReq = 0;
    var startTime = 0;
    var countTime = 0;
    var dur = 0;
    console.log("Performance");
    $('#stopBtn').prop("disabled", true);
     // $.ajaxSetup({async: false});
    $('#startBtn').click(function(e) {
      // e.preventDefault();
      // e.stopPropagation();
      if ($('form#perfForm')[0].checkValidity()) {
        maxReq = $('#mreq').val();
        dur = $('#dur').val();
        postCounter = 0;
        getCounter = 0;
        // totalPostCounter = 0;
        // totalGetCounter = 0;
        $('#progressDiv').show();
        startTime = new Date().getTime();
        countTime = startTime;
        $('.progress').addClass("active");
        $('.progress-bar-success').css("width", "0%");
        $('.progress-bar-warning').css("width", "0%");
        $('.progress-bar-danger').css("width", "100%");
        $('#postc').val('0');
        $('#getc').val('0');
        // sendPostReq();
        $('#startBtn').prop("disabled", true);
        $('#stopBtn').prop("disabled", false);
        $.get("/performance/startTestEnv");
        timeFunc = setInterval(function() {
          sendPostReq()
        }, 1);
        setTimeout(function() {
          $('#post-progress').removeClass("active");
          clearTimeout(timeFunc);
          getstartTime = new Date().getTime();
          getcountTime = getstartTime;
          timeFunc = setInterval(function() {
            sendGetReq()
          }, 1);
        }, ((dur) * 1000));
        return false;
      }
      return true;
    });

    function sendPostReq() {
      var endTime = new Date().getTime();
      if (((endTime - startTime) < (dur * 1000))) {
        // totalPostCounter++;
        $.ajax({
          type: "POST",
          url: "/performance/publicmessage",
          data: {
            "user": "testPerform",
            "content": "I am checking the message",
            "maxReq":maxReq
          },
          async: false,
          success: function(data) {
            if (data.success) {
              endTime = new Date().getTime();
              if ((endTime - startTime) <= ((dur+5) * 1000)) {
                postCounter++;
                if (endTime - countTime >= 1000) {
                  $('#postc').val(postCounter + "");
                  countTime = endTime;
                  postCounter = 0;
                }

                $('#post-progress .progress-bar-success').css("width", Math.ceil((endTime - startTime) / (dur * 10)) + "%");
                $('#post-progress .progress-bar-danger').css("width", (100 - Math.ceil((endTime - startTime) / (dur * 10))) + "%");

              }
            }
          }
        });
        endTime = new Date().getTime();

      } else {
        $('#post-progress').removeClass("active");
        // $('#postc').val(getCounter + "");
      }
    }

    function sendGetReq() {
      var endTime = new Date().getTime();
      if (((endTime - getstartTime) < (dur * 1000))) {
        $.ajax({
          type: "GET",
          url: "/performance/messages/wall",
          async: false,
          success: function(data) {

            if (data.success) {
              endTime = new Date().getTime();
              if ((endTime - getstartTime) <= ((dur+5) * 1000)) {
                getCounter++;
                if (endTime - getcountTime >= 1000) {
                  $('#getc').val(getCounter + "");
                  getcountTime = endTime;
                  getCounter = 0;
                }

                $('#get-progress .progress-bar-warning').css("width", Math.ceil((endTime - getstartTime) / (dur * 10)) + "%");
                $('#get-progress .progress-bar-danger').css("width", (100 - Math.ceil((endTime - getstartTime) / (dur * 10))) + "%");
              }
            }
          }
        });

      } else {
        // $('#getc').val(getCounter + "");
        $('#get-progress').removeClass("active");
        $.get("/performance/stopTestEnv");
        clearTimeout(timeFunc);
        $('#startBtn').prop("disabled", false);
        $('#stopBtn').prop("disabled", true);
      }

    }
    $('#stopBtn').click(function() {

        $.get("/performance/stopTestEnv");
        clearTimeout(timeFunc);
        $('.progress').removeClass("active");


        dur = 0;
        $('#startBtn').prop("disabled", false);
        $('#stopBtn').prop("disabled", true);
        return false;
      
    });
 
    </script>